{"/home/travis/build/npmtest/node-npmtest-wechat-oauth/test.js":"/* istanbul instrument in package npmtest_wechat_oauth */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-wechat-oauth/lib.npmtest_wechat_oauth.js":"/* istanbul instrument in package npmtest_wechat_oauth */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_wechat_oauth = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_wechat_oauth = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-wechat-oauth/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-wechat-oauth && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_wechat_oauth */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_wechat_oauth\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_wechat_oauth.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_wechat_oauth.rollup.js'] =\n            local.assetsDict['/assets.npmtest_wechat_oauth.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_wechat_oauth.__dirname + '/lib.npmtest_wechat_oauth.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-wechat-oauth/node_modules/wechat-oauth/lib/oauth.js":"'use strict';\n\nvar urllib = require('urllib');\nvar wrapper = require('./util').wrapper;\nvar extend = require('util')._extend;\nvar querystring = require('querystring');\n\nvar AccessToken = function (data) {\n  if (!(this instanceof AccessToken)) {\n    return new AccessToken(data);\n  }\n  this.data = data;\n};\n\n/*!\n * 检查AccessToken是否有效，检查规则为当前时间和过期时间进行对比\n *\n * Examples:\n * ```\n * token.isValid();\n * ```\n */\nAccessToken.prototype.isValid = function () {\n  return !!this.data.access_token && (new Date().getTime()) < (this.data.create_at + this.data.expires_in * 1000);\n};\n\n/*!\n * 处理token，更新过期时间\n */\nvar processToken = function (that, callback) {\n  var create_at = new Date().getTime();\n\n  return function (err, data, res) {\n    if (err) {\n      return callback(err, data);\n    }\n    data.create_at = create_at;\n    // 存储token\n    that.saveToken(data.openid, data, function (err) {\n      callback(err, new AccessToken(data));\n    });\n  };\n};\n\n/**\n * 根据appid和appsecret创建OAuth接口的构造函数\n * 如需跨进程跨机器进行操作，access token需要进行全局维护\n * 使用使用token的优先级是：\n *\n * 1. 使用当前缓存的token对象\n * 2. 调用开发传入的获取token的异步方法，获得token之后使用（并缓存它）。\n\n * Examples:\n * ```\n * var OAuth = require('wechat-oauth');\n * var api = new OAuth('appid', 'secret');\n * ```\n * @param {String} appid 在公众平台上申请得到的appid\n * @param {String} appsecret 在公众平台上申请得到的app secret\n * @param {Function} getToken 用于获取token的方法\n * @param {Function} saveToken 用于保存token的方法\n */\nvar OAuth = function (appid, appsecret, getToken, saveToken) {\n  this.appid = appid;\n  this.appsecret = appsecret;\n  // token的获取和存储\n  this.store = {};\n  this.getToken = getToken || function (openid, callback) {\n    callback(null, this.store[openid]);\n  };\n  if (!saveToken && process.env.NODE_ENV === 'production') {\n    console.warn('Please dont save oauth token into memory under production');\n  }\n  this.saveToken = saveToken || function (openid, token, callback) {\n    this.store[openid] = token;\n    callback(null);\n  };\n  this.defaults = {};\n};\n\n/**\n * 用于设置urllib的默认options\n *\n * Examples:\n * ```\n * oauth.setOpts({timeout: 15000});\n * ```\n * @param {Object} opts 默认选项\n */\nOAuth.prototype.setOpts = function (opts) {\n  this.defaults = opts;\n};\n\n/*!\n * urllib的封装\n *\n * @param {String} url 路径\n * @param {Object} opts urllib选项\n * @param {Function} callback 回调函数\n */\nOAuth.prototype.request = function (url, opts, callback) {\n  var options = {};\n  extend(options, this.defaults);\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  for (var key in opts) {\n    if (key !== 'headers') {\n      options[key] = opts[key];\n    } else {\n      if (opts.headers) {\n        options.headers = options.headers || {};\n        extend(options.headers, opts.headers);\n      }\n    }\n  }\n  urllib.request(url, options, callback);\n};\n\n/**\n * 获取授权页面的URL地址\n * @param {String} redirect 授权后要跳转的地址\n * @param {String} state 开发者可提供的数据\n * @param {String} scope 作用范围，值为snsapi_userinfo和snsapi_base，前者用于弹出，后者用于跳转\n */\nOAuth.prototype.getAuthorizeURL = function (redirect, state, scope) {\n  var url = 'https://open.weixin.qq.com/connect/oauth2/authorize';\n  var info = {\n    appid: this.appid,\n    redirect_uri: redirect,\n    response_type: 'code',\n    scope: scope || 'snsapi_base',\n    state: state || ''\n  };\n\n  return url + '?' + querystring.stringify(info) + '#wechat_redirect';\n};\n\n/**\n * 获取授权页面的URL地址\n * @param {String} redirect 授权后要跳转的地址\n * @param {String} state 开发者可提供的数据\n * @param {String} scope 作用范围，值为snsapi_login，前者用于弹出，后者用于跳转\n */\nOAuth.prototype.getAuthorizeURLForWebsite = function (redirect, state, scope) {\n  var url = 'https://open.weixin.qq.com/connect/qrconnect';\n  var info = {\n    appid: this.appid,\n    redirect_uri: redirect,\n    response_type: 'code',\n    scope: scope || 'snsapi_login',\n    state: state || ''\n  };\n\n  return url + '?' + querystring.stringify(info) + '#wechat_redirect';\n};\n\n/**\n * 根据授权获取到的code，换取access token和openid\n * 获取openid之后，可以调用`wechat.API`来获取更多信息\n * Examples:\n * ```\n * api.getAccessToken(code, callback);\n * ```\n * Callback:\n *\n * - `err`, 获取access token出现异常时的异常对象\n * - `result`, 成功时得到的响应结果\n *\n * Result:\n * ```\n * {\n *  data: {\n *    \"access_token\": \"ACCESS_TOKEN\",\n *    \"expires_in\": 7200,\n *    \"refresh_token\": \"REFRESH_TOKEN\",\n *    \"openid\": \"OPENID\",\n *    \"scope\": \"SCOPE\"\n *  }\n * }\n * ```\n * @param {String} code 授权获取到的code\n * @param {Function} callback 回调函数\n */\nOAuth.prototype.getAccessToken = function (code, callback) {\n  var url = 'https://api.weixin.qq.com/sns/oauth2/access_token';\n  var info = {\n    appid: this.appid,\n    secret: this.appsecret,\n    code: code,\n    grant_type: 'authorization_code'\n  };\n  var args = {\n    data: info,\n    dataType: 'json'\n  };\n  this.request(url, args, wrapper(processToken(this, callback)));\n};\n\n/**\n * 根据refresh token，刷新access token，调用getAccessToken后才有效\n * Examples:\n * ```\n * api.refreshAccessToken(refreshToken, callback);\n * ```\n * Callback:\n *\n * - `err`, 刷新access token出现异常时的异常对象\n * - `result`, 成功时得到的响应结果\n *\n * Result:\n * ```\n * {\n *  data: {\n *    \"access_token\": \"ACCESS_TOKEN\",\n *    \"expires_in\": 7200,\n *    \"refresh_token\": \"REFRESH_TOKEN\",\n *    \"openid\": \"OPENID\",\n *    \"scope\": \"SCOPE\"\n *  }\n * }\n * ```\n * @param {String} refreshToken refreshToken\n * @param {Function} callback 回调函数\n */\nOAuth.prototype.refreshAccessToken = function (refreshToken, callback) {\n  var url = 'https://api.weixin.qq.com/sns/oauth2/refresh_token';\n  var info = {\n    appid: this.appid,\n    grant_type: 'refresh_token',\n    refresh_token: refreshToken\n  };\n  var args = {\n    data: info,\n    dataType: 'json'\n  };\n  this.request(url, args, wrapper(processToken(this, callback)));\n};\n\nOAuth.prototype._getUser = function (options, accessToken, callback) {\n  var url = 'https://api.weixin.qq.com/sns/userinfo';\n  var info = {\n    access_token: accessToken,\n    openid: options.openid,\n    lang: options.lang || 'en'\n  };\n  var args = {\n    data: info,\n    dataType: 'json'\n  };\n  this.request(url, args, wrapper(callback));\n};\n\n/**\n * 根据openid，获取用户信息。\n * 当access token无效时，自动通过refresh token获取新的access token。然后再获取用户信息\n * Examples:\n * ```\n * api.getUser(options, callback);\n * ```\n *\n * Options:\n * ```\n * openId\n * // 或\n * {\n *  \"openid\": \"the open Id\", // 必须\n *  \"lang\": \"the lang code\" // zh_CN 简体，zh_TW 繁体，en 英语\n * }\n * ```\n * Callback:\n *\n * - `err`, 获取用户信息出现异常时的异常对象\n * - `result`, 成功时得到的响应结果\n *\n * Result:\n * ```\n * {\n *  \"openid\": \"OPENID\",\n *  \"nickname\": \"NICKNAME\",\n *  \"sex\": \"1\",\n *  \"province\": \"PROVINCE\"\n *  \"city\": \"CITY\",\n *  \"country\": \"COUNTRY\",\n *  \"headimgurl\": \"http://wx.qlogo.cn/mmopen/g3MonUZtNHkdmzicIlibx6iaFqAc56vxLSUfpb6n5WKSYVY0ChQKkiaJSgQ1dZuTOgvLLrhJbERQQ4eMsv84eavHiaiceqxibJxCfHe/46\",\n *  \"privilege\": [\n *    \"PRIVILEGE1\"\n *    \"PRIVILEGE2\"\n *  ]\n * }\n * ```\n * @param {Object|String} options 传入openid或者参见Options\n * @param {Function} callback 回调函数\n */\nOAuth.prototype.getUser = function (options, callback) {\n  if (typeof options !== 'object') {\n    options = {\n      openid: options\n    };\n  }\n  var that = this;\n  this.getToken(options.openid, function (err, data) {\n    if (err) {\n      return callback(err);\n    }\n    // 没有token数据\n    if (!data) {\n      var error = new Error('No token for ' + options.openid + ', please authorize first.');\n      error.name = 'NoOAuthTokenError';\n      return callback(error);\n    }\n    var token = new AccessToken(data);\n    if (token.isValid()) {\n      that._getUser(options, token.data.access_token, callback);\n    } else {\n      that.refreshAccessToken(token.data.refresh_token, function (err, token) {\n        if (err) {\n          return callback(err);\n        }\n        that._getUser(options, token.data.access_token, callback);\n      });\n    }\n  });\n};\n\n/**\n * 检验授权凭证（access_token）是否有效。\n * Examples:\n * ```\n * api.verifyToken(openid, accessToken, callback);\n * ```\n * @param {String} openid 传入openid\n * @param {String} accessToken 待校验的access token\n * @param {Function} callback 回调函数\n */\nOAuth.prototype.verifyToken = function (openid, accessToken, callback) {\n  var url = 'https://api.weixin.qq.com/sns/auth';\n  var info = {\n    access_token: accessToken,\n    openid: openid\n  };\n  var args = {\n    data: info,\n    dataType: 'json'\n  };\n  this.request(url, args, wrapper(callback));\n};\n\n/**\n * 根据code，获取用户信息。\n * Examples:\n * ```\n * api.getUserByCode(code, callback);\n * ```\n * Callback:\n *\n * - `err`, 获取用户信息出现异常时的异常对象\n * - `result`, 成功时得到的响应结果\n *\n * Result:\n * ```\n * {\n *  \"openid\": \"OPENID\",\n *  \"nickname\": \"NICKNAME\",\n *  \"sex\": \"1\",\n *  \"province\": \"PROVINCE\"\n *  \"city\": \"CITY\",\n *  \"country\": \"COUNTRY\",\n *  \"headimgurl\": \"http://wx.qlogo.cn/mmopen/g3MonUZtNHkdmzicIlibx6iaFqAc56vxLSUfpb6n5WKSYVY0ChQKkiaJSgQ1dZuTOgvLLrhJbERQQ4eMsv84eavHiaiceqxibJxCfHe/46\",\n *  \"privilege\": [\n *    \"PRIVILEGE1\"\n *    \"PRIVILEGE2\"\n *  ]\n * }\n * ```\n * @param {Object|String} options 授权获取到的code\n * @param {Function} callback 回调函数\n */\nOAuth.prototype.getUserByCode = function (options, callback) {\n  var that = this;\n\n  var lang, code;\n  if (typeof options === 'string') {\n    code = options;\n  } else {\n    lang = options.lang;\n    code = options.code;\n  }\n\n  this.getAccessToken(code, function (err, result) {\n    if (err) {\n      return callback(err);\n    }\n    var openid = result.data.openid;\n    that.getUser({openid: openid, lang: lang}, callback);\n  });\n};\n\nmodule.exports = OAuth;\n","/home/travis/build/npmtest/node-npmtest-wechat-oauth/node_modules/wechat-oauth/lib/util.js":"'use strict';\n\n/**\n * 对返回结果的一层封装，如果遇见微信返回的错误，将返回一个错误\n * 参见：http://mp.weixin.qq.com/wiki/index.php?title=返回码说明\n */\nexports.wrapper = function (callback) {\n  return function (err, data, res) {\n    callback = callback || function () {};\n    if (err) {\n      err.name = 'WeChatAPI' + err.name;\n      return callback(err, data, res);\n    }\n    if (data.errcode) {\n      err = new Error(data.errmsg);\n      err.name = 'WeChatAPIError';\n      err.code = data.errcode;\n      return callback(err, data, res);\n    }\n    callback(null, data, res);\n  };\n};\n"}